buildscript {
    repositories { mavenCentral() }
    dependencies {
        classpath 'io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.5.3'
        classpath 'me.champeau.gradle:jmh-gradle-plugin:0.3.1'
    }
}

plugins {
    id 'com.bmuschko.nexus' version '2.3.1'
    id 'pl.allegro.tech.build.axion-release' version '1.4.0'
    id "me.champeau.gradle.jmh" version "0.3.1"
}

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'io.codearte.nexus-staging'

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8

scmVersion {
    tag { prefix = 'v' }
    versionCreator 'versionWithBranch'
}

project.version = scmVersion.version
project.group = 'pl.allegro.tech'

dependencies {
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.4'
    compile group: 'org.parboiled', name: 'parboiled-java', version: '1.1.7'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.21'

    testCompile group: 'org.spockframework', name: 'spock-core', version: '1.0-groovy-2.4'

    jmh group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.21'
}

jmh {
    jmhVersion = '1.17.4'
    warmupIterations = 8 // Time to spend at each warmup iteration.
    iterations = 16 // Number of measurement iterations to do.
    fork = 1 // How many times to forks a single benchmark. Use 0 to disable forking altogether
}

test {
    testLogging {
        exceptionFormat = 'full'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.14.1'
}

nexusStaging {
    packageGroup = 'pl.allegro'
    numberOfRetries = 15
    delayBetweenRetriesInMillis = 5000
}

modifyPom {
    project {
        name 'opel'
        description 'Asynchronous expression language'
        url 'https://github.com/allegro/opel'
        inceptionYear '2016'

        scm {
            url 'https://github.com/allegro/opel'
            connection 'scm:git@github.com:allegro/opel.git'
            developerConnection 'scm:git@github.com:allegro/opel.git'
        }

        licenses {
            license {
                name 'The Apache Software License, Version 2.0'
                url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
            }
        }

        developers {
            developer {
                id 'opel-developers'
                name 'OPEL-DEVELOPERS'
            }
        }
    }
}
